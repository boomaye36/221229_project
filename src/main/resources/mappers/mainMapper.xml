<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
 "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.project.main.dao.MainDAO">
	<insert id="insertWait" parameterType="map">
		INSERT INTO `wait`
		(
			`user_id`
			,`localid`
			,`user_gender`
			,`preference`
			,`createdat`
		)
		VALUES
		(
			#{user_id}
			,#{localid}
			,#{user_gender}
			,#{preference}
			,NOW()
		)
		</insert>
		
		<select id="selectWait" parameterType="map" resultType="com.project.main.model.Wait">
			SELECT 
				* 
			FROM
				`wait`
			WHERE
				`user_gender` = #{preference}
			AND
				`preference` = #{user_gender}
		</select>
	
	<select id="selectWaitByGender" parameterType="com.project.main.model.Wait" resultType="com.project.main.model.Wait">
		SELECT
			`id`
			,`user_id`
			,`localid`
			,`user_gender`
			,`preference`
			,`createdat`
		FROM
			`wait`
		WHERE
			(`user_gender` = #{preference} OR #{preference} = '모두')
		AND
			(`preference` = #{user_gender} OR `preference` = '모두')
			<!-- 차단된 사람 가져오지않게 -->
		AND
			`id`
		NOT IN
			(SELECT `user_receiveid` FROM `block` where `user_sendid` = #{user_id})
		AND
			`id`
		NOT IN
			(SELECT `user_sendid` FROM `block` where `user_receiveid` = #{user_id})
	</select>
	<!-- recent 테이블 양방향 삽입 -->
	<insert id="insertRecent" parameterType="com.project.main.model.Recent">
		INSERT INTO `recent`
		(
			`user_sendid`
			,`user_receiveid`
			,`createdat`
		)
		VALUES
		(
			#{user_sendid}
			,#{user_receiveid}
			,NOW()
		)
		,
		(
			#{user_receiveid}
			,#{user_sendid}
			,NOW()
		)
	</insert>
	
	
	<delete id="deleteWaitById" parameterType="com.project.main.model.Wait">
		DELETE FROM
			`wait`
		WHERE
			`user_id` = #{user_receiveid}
	</delete>
	
	<delete id="deleteWait" parameterType="com.project.main.model.Wait">
		DELETE FROM
			`wait`
		WHERE
			`user_id` = #{user_id}
	</delete>
	
	
	<select id="selectWaitByuserId" parameterType="int" resultType="int">
		SELECT
			`id`
			,`user_id`
			,`localid`
			,`user_gender`
			,`preference`
			,`createdat`
		FROM
			`wait`
		WHERE
			`user_id` = #{user_id}
	</select>
	
	<delete id="deleteWaitByuserId" parameterType="int">
		DELETE FROM
			`wait`
		WHERE
			`user_id` = #{user_id}
	</delete>
	
	
	<select id="selectRecentCheck" resultType="com.project.user.model.User" parameterType="int">
		SELECT
			user.id
			,user.loginid
			,user.nickname
			,user.profilephoto
		FROM
			`recent`
		LEFT JOIN `user`
		ON 
			recent.user_receiveid = user.id
		WHERE
			recent.user_sendid = #{user_sendid}
		ORDER BY
			recent.id DESC
		LIMIT 1;
	</select>
	
	
	
	<!-- 매칭이력 event -->
	
	<select id="selectRecentUserBySendId" resultType="com.project.user.model.User" parameterType="com.project.main.model.Recent">
		SELECT
			a.id
			,a.loginid
			,a.nickname
			,a.profilephoto
<!-- 			,confirm
 -->			, timestampdiff  (second, (b.`createdat`), NOW()) as second
			, timestampdiff  (minute, (b.`createdat`), NOW()) as minute
			, timestampdiff  (hour, (b.`createdat`), NOW()) as hour
			, timestampdiff  (day, (b.`createdat`), NOW()) as day
			
		FROM
			`recent` as b
		LEFT JOIN `user` as a
		ON b.user_receiveid = a.id
		<!--  JOIN `friend` as c
		ON c.user_receiveid = a.id -->
		
		where 
			b.user_sendid = #{user_sendid}
	
		AND
			a.id
		NOT IN
			(SELECT `user_receiveid` FROM `block` where `user_sendid` = #{user_sendid})
		AND
			a.id
		NOT IN
			(SELECT `user_sendid` FROM `block` where `user_receiveid` = #{user_sendid})
			
		ORDER BY
			b.createdat DESC
		LIMIT 6;
		
	</select>
	
	<!-- 친구 추천 목록 -->
	<select id="selectUserList" resultType="com.project.user.model.User" parameterType="com.project.user.model.User">
	SELECT
		*
	FROM
		`user`
	WHERE
		`id`
	<!-- 자기 자신 추천 안되게 -->
	NOT IN 
		(#{id})
		
	<!-- 친구요청 한 사람 추천 안되게 -->
	AND
		`id`
	NOT IN
		(SELECT `user_receiveid` FROM `friend` WHERE (`user_sendid` = #{id}) OR (`user_receiveid` = #{id}))
	
	<!-- 차단한 사람 추천 안되게 -->
	AND
		`id`
	NOT IN
		(SELECT `user_receiveid` FROM `block` where `user_sendid` = #{id})
	AND
		`id`
	NOT IN
		(SELECT `user_sendid` FROM `block` where `user_receiveid` = #{id})
	ORDER BY RAND()	
	LIMIT 5
	</select>
	<insert id="insertFriend" parameterType="map">
		INSERT IGNORE INTO
			`friend`
		(
			`user_sendid`
			,`user_receiveid`
			,`confirm`
			,`createdat`
			,`updatedat`
		)
		VALUES
		(
			#{user_sendid},
			#{user_receiveid},
			'승인중',
			NOW(),
			NOW()
		)
	</insert>
	
	<!-- block 테이블 insert -->
	<insert id="insertBlock" parameterType="map">
		INSERT INTO
			`block`
		(
			`user_sendid`
			,`user_receiveid`
			,`createdat`
		)
		VALUES
		(
			#{user_sendid},
			#{user_receiveid},
			NOW()
		)
	</insert>
	<!-- 친구 요청 목록 -->
	<select id="selectFriend" resultType="map" parameterType="com.project.user.model.User">
		SELECT
			*
		FROM
			`user`
		WHERE
			`id`
		IN
			(SELECT  `user_sendid` FROM `friend`
				WHERE
					`user_receiveid` = #{id}
				AND
					`confirm` = '승인중')
			
	</select>
	
	<!-- 친구 수락 목록 -->
	<select id="selectRealFriend" resultType="map" parameterType="com.project.user.model.User">
		SELECT
			*
		FROM
			`user`
		WHERE
			`id`
		IN
			(SELECT  `user_sendid` FROM `friend`
				WHERE
					`user_receiveid` = #{id}
				AND
					`confirm` = '수락')
		OR
			`id`
		IN
			(SELECT `user_receiveid` FROM `friend`
				WHERE
					`user_sendid` = #{id}
				AND
				 	`confirm` = '수락')
			
			
	</select>
	
	<update id="updateFriend" parameterType="com.project.main.model.Friend">
		UPDATE
			`friend`
		SET
			`confirm` = #{confirm},
			`updatedat` = NOW()
		WHERE
			`user_sendid` = #{user_id}
	
	</update>
	
	<!-- friend 테이블에 존재하는지 -->
	<select id="isFriend" parameterType="map" resultType="boolean">
		SELECT 
			COUNT(1)
		FROM
			`friend`
		WHERE
			`user_sendid` = #{user_receiveid}
			AND
			`user_receiveid` = #{user_sendid}
	</select>
	<!-- 수락된 친구 조회  -->
	<select id="RealFriendCheck" parameterType="map" resultType="boolean">
		SELECT 
			COUNT(1)
		FROM
			`friend`
		WHERE
			`user_sendid` = #{user_sendid}
			AND
			`user_receiveid` = #{user_receiveid}
			AND 
			`confirm` = '수락'
	</select>
	<!-- 내가 초대한 친구 목록 중 승인중 조회-->
	<select id="friendcheck" parameterType="map" resultType="boolean">
		SELECT 
			COUNT(1)
		FROM
			`friend`
		WHERE
			`user_sendid` = #{user_sendid}
			AND
			`user_receiveid` = #{user_receiveid}
			AND
			`confirm` = '승인중'
	</select>
	
	
</mapper>